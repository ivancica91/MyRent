@model My_Rent.Views.Models.PropertyViewModel

@{
    ViewData["Title"] = "Details";
}

    <h1 class="text-center ">Details of @Model.PropertyName </h1>

    <div class="m-4">
        <div class="btn-group">
            <a class="btn btn-primary m-2" asp-action="Index">Back to List</a>
            <a class="btn btn-primary m-2" asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
        </div>

        <hr />

        <div class="container">
            <div class="container">
                <dl class="row">
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.PropertyName)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.PropertyName)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Owner)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Owner)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Address)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Address)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.PricePerNight)
                    </dt>
                    <dd class="col-sm-10">
                        $ @Html.DisplayFor(model => model.PricePerNight)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.MaxCapacity)
                    </dt>
                    <dd class="col-sm-10">
                        </svg>
                        @Html.DisplayFor(model => model.MaxCapacity)
                        <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-people-fill" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd" d="M7 14s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1H7zm4-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6zm-5.784 6A2.238 2.238 0 0 1 5 13c0-1.355.68-2.75 1.936-3.72A6.325 6.325 0 0 0 5 9c-4 0-5 3-5 4s1 1 1 1h4.216zM4.5 8a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5z" />
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.NumOfBedrooms)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.NumOfBedrooms)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.NumOfBathrooms)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.NumOfBathrooms)
                    </dd>                    
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.HasPool)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.HasPool)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.HasWiFi)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.HasWiFi)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.HasParking)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.HasParking)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.IsAvailable)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.IsAvailable)
                    </dd>
                    <dt class="col-sm-2">
                        @Html.DisplayNameFor(model => model.Category)
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Category)
                    </dd>
                    <!--  <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.ImageThumbnailUrl)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.ImageThumbnailUrl)
                     </div>
                </dd>   -->
            </div>

            <div id="carousel" class="carousel slide m-3" data-ride="carousel" style="width: 790px; height:500px;">
                <div class="carousel-inner">
                    <div class="carousel-item active">
                        <img src="@{ @Model.ImageUrl}" class="d-block w-100" alt="...">
                    </div>
                    <div class="carousel-item">
                        <img src="@{ @Model.ImageThumbnailUrl}" class="d-block w-100" alt="...">
                    </div>

                </div>

                <br />
                <div class="card-text">@Model.LongtDescription</div>

                <br />
                <!-- <img src=" @{ @Model.ImageUrl}" class="m-4" alt="Responsive image">    -->
                <!--     <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.ImageUrl)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.ImageUrl)
            </dd>   -->
                </dl>
            </div>
        </div>
    </div>
